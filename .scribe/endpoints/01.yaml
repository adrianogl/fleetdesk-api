name: Tasks
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/tasks
    metadata:
      groupName: Tasks
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      status:
        name: status
        description: 'Filter by status (pending,completed).'
        required: false
        example: completed
        type: string
        custom: []
    cleanQueryParameters:
      status: completed
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e65kEPVhc8aaDg631fb4vZd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tasks
    metadata:
      groupName: Tasks
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: jhppdimezpvxbzicgmthmzyimibhkvymabjomfouzvkqnsyrenqqjhrmxusuavudbnuzrnpyfhjplskqjyuymwzmpnjzzxsokgsqyhecfqtrbfxnmdfnxybjcghpntvsqsylpdntjfbdghbygfvxbfuxhdjeru
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: deleniti
        type: string
        custom: []
    cleanBodyParameters:
      title: jhppdimezpvxbzicgmthmzyimibhkvymabjomfouzvkqnsyrenqqjhrmxusuavudbnuzrnpyfhjplskqjyuymwzmpnjzzxsokgsqyhecfqtrbfxnmdfnxybjcghpntvsqsylpdntjfbdghbygfvxbfuxhdjeru
      description: deleniti
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v61a54EfZdkcV8gDabh3e6P'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/tasks/{task_id}'
    metadata:
      groupName: Tasks
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 16
        type: integer
        custom: []
    cleanUrlParameters:
      task_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: 'Must be one of <code>pending</code> or <code>completed</code>.'
        required: false
        example: pending
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: temporibus
        type: string
        custom: []
    cleanBodyParameters:
      status: pending
      description: temporibus
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Vfk6DPg8h34b56eZEav1dca'
    controller: null
    method: null
    route: null
    custom: []
